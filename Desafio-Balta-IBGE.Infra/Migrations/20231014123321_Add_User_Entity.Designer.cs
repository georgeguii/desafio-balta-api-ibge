// <auto-generated />
using System;
using Desafio_Balta_IBGE.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Desafio_Balta_IBGE.Infra.Migrations
{
    [DbContext(typeof(IbgeContext))]
    [Migration("20231014123321_Add_User_Entity")]
    partial class Add_User_Entity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Desafio_Balta_IBGE.Domain.Models.Ibge", b =>
                {
                    b.Property<string>("IbgeId")
                        .HasColumnType("char(7)")
                        .HasColumnName("IbgeId");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(80)")
                        .HasColumnName("City");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("char(2)")
                        .HasColumnName("State");

                    b.HasKey("IbgeId");

                    b.ToTable("Ibge", (string)null);
                });

            modelBuilder.Entity("Desafio_Balta_IBGE.Domain.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar")
                        .HasColumnName("Name");

                    b.HasKey("UserId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Desafio_Balta_IBGE.Domain.Models.User", b =>
                {
                    b.OwnsOne("Desafio_Balta_IBGE.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasMaxLength(60)
                                .HasColumnType("varchar")
                                .HasColumnName("Address");

                            b1.HasKey("UserId");

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.OwnsOne("Desafio_Balta_IBGE.Domain.ValueObjects.VerifyEmail", "VerifyEmail", b2 =>
                                {
                                    b2.Property<int>("EmailUserId")
                                        .HasColumnType("int");

                                    b2.Property<DateTime?>("ActivateDate")
                                        .HasColumnType("datetime")
                                        .HasColumnName("ActivateDateAccount");

                                    b2.Property<string>("Code")
                                        .HasMaxLength(6)
                                        .HasColumnType("varchar")
                                        .HasColumnName("ActivationCode");

                                    b2.Property<DateTime?>("ExpireDate")
                                        .HasColumnType("datetime")
                                        .HasColumnName("ExpireDateVerifyEmail");

                                    b2.HasKey("EmailUserId");

                                    b2.ToTable("User");

                                    b2.WithOwner()
                                        .HasForeignKey("EmailUserId");
                                });

                            b1.Navigation("VerifyEmail")
                                .IsRequired();
                        });

                    b.OwnsOne("Desafio_Balta_IBGE.Domain.ValueObjects.Password", "Password", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.Property<DateTime?>("ActivateDate")
                                .HasColumnType("datetime")
                                .HasColumnName("ActivateDate");

                            b1.Property<string>("Code")
                                .HasMaxLength(8)
                                .HasColumnType("varchar")
                                .HasColumnName("PasswordChangeCode");

                            b1.Property<DateTime?>("ExpireDate")
                                .HasColumnType("datetime")
                                .HasColumnName("ExpireDate");

                            b1.Property<string>("Hash")
                                .IsRequired()
                                .HasMaxLength(64)
                                .HasColumnType("varchar")
                                .HasColumnName("Password");

                            b1.HasKey("UserId");

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Password")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
